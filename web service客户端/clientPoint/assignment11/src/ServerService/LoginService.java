
package ServerService;

import java.net.MalformedURLException;
import java.net.URL;
import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01 
 * Generated source version: 2.2
 * 
 */
@HandlerChain(file = "allocation/message-handler.xml")
@WebServiceClient(name = "LoginService", targetNamespace = "http://jw.nju.edu.cn/wsdl", wsdlLocation = "file:/C:/Users/82582/Desktop/SOA/test10/wsdl/EmailLogin.wsdl")
public class LoginService
    extends Service
{

    private final static URL LOGINSERVICE_WSDL_LOCATION;
    private final static WebServiceException LOGINSERVICE_EXCEPTION;
    private final static QName LOGINSERVICE_QNAME = new QName("http://jw.nju.edu.cn/wsdl", "LoginService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/82582/Desktop/SOA/test10/wsdl/EmailLogin.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        LOGINSERVICE_WSDL_LOCATION = url;
        LOGINSERVICE_EXCEPTION = e;
    }

    public LoginService() {
        super(__getWsdlLocation(), LOGINSERVICE_QNAME);
    }

    public LoginService(WebServiceFeature... features) {
        super(__getWsdlLocation(), LOGINSERVICE_QNAME, features);
    }

    public LoginService(URL wsdlLocation) {
        super(wsdlLocation, LOGINSERVICE_QNAME);
    }

    public LoginService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, LOGINSERVICE_QNAME, features);
    }

    public LoginService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LoginService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns LoginPort
     */
    @WebEndpoint(name = "LoginPort")
    public LoginPort getLoginPort() {
        return super.getPort(new QName("http://jw.nju.edu.cn/wsdl", "LoginPort"), LoginPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LoginPort
     */
    @WebEndpoint(name = "LoginPort")
    public LoginPort getLoginPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://jw.nju.edu.cn/wsdl", "LoginPort"), LoginPort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (LOGINSERVICE_EXCEPTION!= null) {
            throw LOGINSERVICE_EXCEPTION;
        }
        return LOGINSERVICE_WSDL_LOCATION;
    }

}
